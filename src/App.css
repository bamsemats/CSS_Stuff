@property --color-bg {
  syntax: "<color>";
  initial-value: #EEE;
  inherits: true;
} 
@property --button-one {
  syntax: "<color>";
  initial-value: #AAA;
  inherits: true;
} 
@property --button-two {
  syntax: "<color>";
  initial-value: #999;
  inherits: true;
} 
@property --button-three {
  syntax: "<color>";
  initial-value: #888;
  inherits: true;
} 
@property --button-bg {
  syntax: "<color>";
  initial-value: #EEEDDD;
  inherits: true;
} 
@property --color-text {
  syntax: "<color>";
  initial-value: #444;
  inherits: true;
} 
@property --color-text-2 {
  syntax: "<color>";
  initial-value: #555;
  inherits: true;
} 

:root {
  transition: 
    --color-bg 250ms, 
    --color-button-one 250ms, 
    --color-button-two 250ms, 
    --color-button-three 250ms, 
    --color-button-bg 250ms,
    --color-text 0ms,
    --color-text-2 0ms;
}
*,
*::before,
*::after {
  box-sizing: border-box;
}
a {
  cursor: pointer;
}
.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}
html {
  background-color: var(--color-bg);
}
.App {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
  min-height: 100vh;
  width: 100%;
  /* background-color: var(--color-bg); */
}
:root[data-theme='light'] {
  --color-bg: #EEE;
  --color-button-one: #AAA;
  --color-button-two: #999;
  --color-button-three: #888;
  --color-button-bg: #d1ce9e;
  --color-text: #444;
  --color-text-2: #555;
}

:root[data-theme='dark'] {
  --color-bg: #222;
  --color-button-one: #DDD;
  --color-button-two: #EEE;
  --color-button-three: #FFF;
  --color-button-bg: #5f5f74;
  --color-text: #CCC;
  --color-text-2: #DDD;
}

:root[data-theme='pink'] {
  --color-bg: #db7bea;
  --color-button-one: #e5d8e8;
  --color-button-two: #dbc7e0;
  --color-button-three: #d7c1db;
  --color-button-bg: #b251c1;
  --color-text: #e5d8e8;
  --color-text-2: #dbc7e0;
}

:root[data-theme='blue'] {
  --color-bg: #71b4e4;
  --color-button-one: #d8e5ef;
  --color-button-two: #d0dce5;
  --color-button-three: #c8d5df;
  --color-button-bg: #4d94c7;
  --color-text: #d8e5ef;
  --color-text-2: #d0dce5;
}

:root[data-theme='green'] {
  --color-bg: #71e4a9;
  --color-button-one: #ddebe4;
  --color-button-two: #d7eae0;
  --color-button-three: #d0e4da;
  --color-button-bg: #57d594;
  --color-text: #ddebe4;
  --color-text-2: #d7eae0;
}
.color-picker {
  position: fixed;
  top: 0;
  left: 0;
}
.color-picker fieldset {
  border: none;
  background-color: rgba(90, 90, 90, 0.3);
  border-radius: 0 0 0.75rem 0;
  display: flex;
  flex-direction: column;
  gap: 2.5rem;
  padding: 1rem 1.25rem;
  margin: 0;
}
.color-picker input[type='radio'] {
  appearance: none;
  padding: 0.1rem;
  margin: 0;
  width: 1.25rem;
  height: 1.25rem;
  outline: 0.25rem solid var(--radio-color, currentColor);
  outline-offset: 0.20rem;
  border-radius: 50%;
  
}
.color-picker input[type='radio']:checked {
  background: var(--radio-color);
  box-shadow: 0px 0px 10px 10px var(--radio-color, currentColor);
  animation: pulsing-shadow 2.5s infinite ease-in;
}
.color-picker input[type='radio']#light {
  --radio-color: #EEE;
}
.color-picker input[type='radio']#dark {
  --radio-color: #222;
}
.color-picker input[type='radio']#pink {
  --radio-color: #db7bea;
}
.color-picker input[type='radio']#blue {
  --radio-color: #71b4e4;
}
.color-picker input[type='radio']#green {
  --radio-color: #71e4a9;
}
@keyframes pulsing-shadow {
  0%, 100% {
     box-shadow: 0px 0px 10px 10px var(--radio-color, currentColor);
  }
  50% {
     box-shadow: 0px 0px 2px 2px var(--radio-color, currentColor);
  }
}
.svg-container {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  margin-top: 4rem;
  width: 80vw;
}

.hamburger {
  width: calc(10px + 15vw);
}

@media (width < 690px) {
  .svg-container {
    flex-direction: column;
    justify-content: flex-start;
    gap: calc(0.5rem + 2vw);
  }
  .hamburger {
    width: calc(10px + 30vw)
  }
}


/* Button One */
.button-one {
  color: var(--color-button-one);
  background-color: var(--color-button-bg);
  border: 1rem solid var(--color-button-one);
  border-radius: 1.75rem;
}

.button-one .line {
  transition: opacity 0ms 500ms;
  transform-origin: center;
  --transition-time: 750ms;
  --transition-rate: ease-in-out;
}

.button-one[data-state = 'closed'] :is(.top, .bottom) {
  animation: hamburger-one-close var(--transition-time) var(--transition-rate) forwards;
}

.button-one[data-state = 'opened'] :is(.top, .bottom) {
  animation: hamburger-one-open var(--transition-time) var(--transition-rate) forwards;
}

.button-one .top {
  --hamburger-one-rotation: 45deg;
  --hamburger-one-position-y: 25;
}

.button-one .bottom {
  --hamburger-one-rotation: -45deg;
  --hamburger-one-position-y: 65;
}

.button-one[data-state = 'opened'] .middle {
  transition: opacity 0ms 250ms;
  opacity: 0;
}

/* Button Two */
.button-two {
  color: var(--color-button-two);
  background-color: var(--color-button-bg);
  border: 1rem solid var(--color-button-two);
  border-radius: 1.75rem;
}

.button-two .hamburger {
  transition: rotate 800ms 900ms ease-in-out;
}

.button-two .line {
  transition: opacity 0ms 900ms;
  transform-origin: center;
  --transition-time: 1250ms;
  --transition-rate: linear;
}

.button-two[data-state = 'opened'] .hamburger {
  transition: rotate 800ms 900ms ease-in-out;
  rotate: 270deg;
}

.button-two[data-state = 'closed'] :is(.top1, .bottom1) {
  animation: hamburger-two-close-one var(--transition-time) var(--transition-rate) forwards;
}

.button-two[data-state = 'opened'] :is(.top1, .bottom1) {
  animation: hamburger-two-open-one var(--transition-time) var(--transition-rate) forwards;
}

.button-two .top1 {
  --hamburger-two-rotation: 45deg;
  --hamburger-two-position-y: 25;
}

.button-two .bottom1 {
  --hamburger-two-rotation: -45deg;
  --hamburger-two-position-y: 65;
}

.button-two[data-state = 'closed'] :is(.top2, .bottom2) {
  animation: hamburger-two-close-two var(--transition-time) var(--transition-rate) forwards;
}

.button-two[data-state = 'opened'] :is(.top2, .bottom2) {
  animation: hamburger-two-open-two var(--transition-time) var(--transition-rate) forwards;
}

.button-two .top2 {
  --hamburger-two-rotation: -45deg;
  --hamburger-two-position-y: 25;
}

.button-two .bottom2 {
  --hamburger-two-rotation: 45deg;
  --hamburger-two-position-y: 65;
}

.button-two[data-state = 'opened'] .middle {
  transition: opacity 0ms 250ms;
  opacity: 0;
}

/* Button Three */
.button-three {
  color: var(--color-button-three);
  background-color: var(--color-button-bg);
  border: 1rem solid var(--color-button-three);
  border-radius: 1.75rem;
}

.button-three .line {
  
  stroke-dasharray: 69 33 69 32 69 1000;
  --transition-time: 750ms;
  --transition-rate: cubic-bezier(0.4, 0, 0.6, 1);
}

.button-three .hamburger {
  transition: rotate 600ms 300ms cubic-bezier(0.4, 0, 0.6, 1);
}

.button-three[data-state = 'opened'] .hamburger {
  
  rotate: -45deg;
}

.button-three[data-state = 'closed'] .line {
  animation: hamburger-three-close var(--transition-time) var(--transition-rate) forwards;
}

.button-three[data-state = 'opened'] .line {
  animation: hamburger-three-open var(--transition-time) var(--transition-rate) forwards;
}

/* Animated List */

.animated-list-div {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 80vw;
  height: 140vh;
  padding: 0rem 2rem;
  margin-top: 8rem;
}

.animated-list-container-one,
.animated-list-container-two,
.animated-list-container-three {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  text-align: left;
}

.animated-list-container-one a,
.animated-list-container-two a,
.animated-list-container-three a {
  text-decoration: none;
  font-size: clamp(0.8rem, 2.5vw, 2.5rem);
  font-weight: 600;
  color: var(--color-text);
  display: inline-block;
}

.animated-list-container-one span,
.animated-list-container-two span,
.animated-list-container-three span {
  font-size: clamp(0.8rem, 2.5vw, 2.5rem);
  font-weight: 800;
  margin-right: 0.25rem;
  color: var(--color-text-2);
}

@media (width < 690px) {
  .animated-list-div {
    flex-direction: column;
    align-items: center;
    gap: 5rem;
    width: 80vw;
    min-height: 120vh;
    height: fit-content;
    padding-bottom: 4rem;
    margin-top: 4rem;
  }
  .animated-list-container-one,
  .animated-list-container-two,
  .animated-list-container-three {
    gap: 0.5rem;
    margin-left: 2rem;
    &::before {
      content: 'Animated List';
      color: var(--color-button-bg);
      font-size: clamp(0.8rem, 25vw, 2.5rem);
      font-weight: 700;
    }
  }

  .animated-list-container-one a,
  .animated-list-container-two a,
  .animated-list-container-three a {
    font-size: clamp(0.8rem, 25vw, 2.5rem);
  }

  .animated-list-container-one span,
  .animated-list-container-two span,
  .animated-list-container-three span {
    font-size: clamp(0.8rem, 25vw, 2.5rem);
  }
}

.animated-list-container-one {
  @media (prefers-reduced-motion: no-preference) {
    & > a {
      transform-origin: left;
      transition: transform 0.75s ease-in-out, opacity 0.3s ease-in-out;
    }
    &:has(:hover, :focus-within) > a:not(:hover, :focus) {
      opacity: 0.25;
      transform: scale(0.8);
    }
  }
}

.animated-list-container-two a {
  transform-origin: -150% 50%;
  transition: transform 2s, opacity 0.3s;
}

.animated-list-container-two {
 
  --arc: 4deg;
  --distance-multiplier-percentage: .25;

  @media (prefers-reduced-motion: no-preference) {
    &:has(a:nth-child(1):hover, a:nth-child(1):focus-within) {--target: 1}
    &:has(a:nth-child(2):hover, a:nth-child(2):focus-within) {--target: 2}
    &:has(a:nth-child(3):hover, a:nth-child(3):focus-within) {--target: 3}
    &:has(a:nth-child(4):hover, a:nth-child(4):focus-within) {--target: 4}
    &:has(a:nth-child(5):hover, a:nth-child(5):focus-within) {--target: 5}
    &:has(a:nth-child(6):hover, a:nth-child(6):focus-within) {--target: 6}
    &:has(a:nth-child(7):hover, a:nth-child(7):focus-within) {--target: 7}
    &:has(a:nth-child(8):hover, a:nth-child(8):focus-within) {--target: 8}
    &:has(a:nth-child(9):hover, a:nth-child(9):focus-within) {--target: 9}
    &:has(a:nth-child(10):hover, a:nth-child(10):focus-within) {--target: 10}

    &:has(:hover, :focus-within) > a:not(:hover, :focus) {
      --distance-from-target: calc(var(--sibling-index) - var(--target));
      --distance-from-target-abs: calc(sqrt(var(--distance-from-target) * var(--distance-from-target)));
      --distance-multiplier: var(--distance-multiplier-percentage) * var(--distance-from-target-abs); /* change 15% */
      --gradual-fadeout: calc(1 - var(--distance-multiplier));
      opacity: var(--gradual-fadeout);

      --angle: calc((var(--sibling-index) - var(--target)) * var(--arc));
      transform: rotateZ(var(--angle));
    }
  }
}

.animated-list-container-three {
  --transition-duration: .375s;
  --timing-function: cubic-bezier(0.66, 0, 0.34, 1);
  overflow-y: clip;
}
.animated-list-container-three a {
  display: block;
  overflow-y: clip;
  transition: 
    transform var(--transition-duration) var(--timing-function),
    translate 0s calc(var(--transition-duration) / 2);
}
.animated-list-container-three a[data-state = 'activated'] {
  animation: animated-list-three-blur-out var(--transition-duration);
}

.animated-list-container-three > div {
  overflow-y: clip;
  margin: 0;
  padding: 0;
}

.animated-list-container-three > *:has(:hover, :focus-within) a[data-state = 'activated']{
  
  translate: 0 2lh;
  transform: translateY(-2lh);
  --color-text: var(--random-color);
  --color-text-2: var(--random-color-2);
  animation: animated-list-three-blur-in var(--transition-duration) forwards;
}

/* Animated List Animations */

@keyframes animated-list-three-blur-in {
  0% {
    filter: blur(0);
  }
  50% {
    filter: blur(1.5px);
  }
  100% {
    filter: blur(0);
  }
}
@keyframes animated-list-three-blur-out {
  0% {
    filter: blur(0);
  }
  50% {
    filter: blur(1.5px);
  }
  100% {
    filter: blur(0);
  }
}
/* SVG Animations */ 

@keyframes hamburger-one-open {
  0% {
   
  }
  33% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: 0deg;
  }
  66% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  100% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: var(--hamburger-one-rotation);
  }
}

@keyframes hamburger-one-close {
  100% {
   
  }
  75% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: 0deg;
  }
  50% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  0% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: var(--hamburger-one-rotation);
  }
}

@keyframes hamburger-two-open-one {
  0% {
   
  }
  10% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: 0deg;
  }
  25% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  40% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  50% {
    y: 45%;
    x: 10%;
    width: 10px;
    rotate: var(--hamburger-two-rotation);
  }
   80% {
    y: 45%;
    x: 10%;
    width: 10px;
    rotate: var(--hamburger-two-rotation);
  }
  100% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: var(--hamburger-two-rotation);
  }
}

@keyframes hamburger-two-open-two {
  0% {
   
  }
  10% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: 0deg;
  }
  25% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  40% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  50% {
    y: 45%;
    x: 80%;
    width: 10px;
    rotate: var(--hamburger-two-rotation);
  }
   80% {
    y: 45%;
    x: 80%;
    width: 10px;
    rotate: var(--hamburger-two-rotation);
  }
  100% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: var(--hamburger-two-rotation);
  }
}

@keyframes hamburger-two-close-one {
  100% {
   
  }
  70% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: 0deg;
  }
  60% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  45% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  35% {
    y: 45%;
    x: 10%;
    width: 10px;
    rotate: var(--hamburger-two-rotation);
  }
  20% {
    y: 45%;
    x: 10%;
    width: 10px;
    rotate: var(--hamburger-two-rotation);
  }
  0% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: var(--hamburger-two-rotation);
  }
}

@keyframes hamburger-two-close-two {
  100% {
   
  }
  70% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: 0deg;
  }
  60% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  45% {
    y: 45%;
    x: 45%;
    width: 10px;
    rotate: 0deg;
  }
  35% {
    y: 45%;
    x: 80%;
    width: 10px;
    rotate: var(--hamburger-two-rotation);
  }
  20% {
    y: 45%;
    x: 80%;
    width: 10px;
    rotate: var(--hamburger-two-rotation);
  }
  0% {
    y: 45%;
    x: 10%;
    width: 80px;
    rotate: var(--hamburger-two-rotation);
  }
}

@keyframes hamburger-three-open {
  100% {
    stroke-dasharray: 69 171 69 1000;
    stroke-dashoffset: -102;
  }
}

@keyframes hamburger-three-close {
  0% {
    stroke-dasharray: 69 171 69 1000;
    stroke-dashoffset: -102;
  }
  100% {
    stroke-dasharray: 69 33 69 32 69 1000;
    stroke-dashoffset: 0;
  }
}

/* Old animation */
@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
